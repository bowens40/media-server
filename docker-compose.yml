services:       

# prowlarr

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: ubuntu-Macmini7-1
    volumes:
      - ${ARRPATH}Prowlarr/config:/config
      - ${ARRPATH}Prowlarr/backup:/data/Backup
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 9696:9696
    restart: unless-stopped
    env_file:
      - '.env'
      
# sonarr

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: ubuntu-Macmini7-1
    volumes:
      - ${ARRPATH}Sonarr/config:/config
      - ${ARRPATH}Sonarr/backup:/data/Backup
      - ${ARRPATH}Sonarr/tvshows:/data/tvshows
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    env_file:
      - '.env'
      
# radarr

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: ubuntu-Macmini7-1
    volumes:
      - ${ARRPATH}Radarr/config:/config
      - ${ARRPATH}Radarr/movies:/data/movies
      - ${ARRPATH}Radarr/backup:/data/Backup
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    env_file:
      - '.env'
      
# lidarr                                           
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    hostname: ubuntu-Macmini7-1
    volumes:
      - ${ARRPATH}Lidarr/config:/config
      - ${ARRPATH}Lidarr/music:/data/musicfolder
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8686:8686
    restart: unless-stopped
    env_file:
      - '.env'
      
# readarr

  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    hostname: ubuntu-Macmini7-1
    volumes:
      - ${ARRPATH}Readarr/config:/config
      - ${ARRPATH}Readarr/books:/data/books
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8787:8787
    restart: unless-stopped
    env_file:
      - '.env'

# homarr

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - ${ARRPATH}Homarr/configs:/app/data/configs
      - ${ARRPATH}Homarr/icons:/app/public/icons
      - ${ARRPATH}Homarr/data:/data
    ports:
      - '7575:7575'
    env_file:
      - '.env'

          
# qBitorrent

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    hostname: ubuntu-Macmini7-1
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    volumes:
      - ${ARRPATH}qbittorrent/config:/config
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    environment:
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    healthcheck:
      start_period: 15s
    env_file:
      - '.env'

# overseerr

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    hostname: ubuntu-Macmini7-1
    restart: unless-stopped
    networks:
      default: null
    ports:
      - 5055:5055
    environment:
      - LOG_LEVEL=debug
      - PORT=5055 #optional
    volumes:
      - ${ARRPATH}overseerr/config:/config
    env_file:
      - '.env'

# portainer

  portainer:
    command:
      - -H
      - unix:///var/run/docker.sock
    container_name: portainer
    hostname: ubuntu-Macmini7-1
    image: portainer/portainer-ce:latest
    networks:
      default: null
    ports:
      - 9000:9000
    restart: unless-stopped
    volumes:
      - ${ARRPATH}portainer/config:/config
      - ${ARRPATH}Downloads:/downloads
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        bind:
          create_host_path: true
    env_file:
      - '.env'
      
# Watchtower

  watchtower:
    container_name: watchtower
    environment:
      REPO_PASS: ""
      REPO_USER: ""
      TZ: America/Vancouver
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_INCLUDE_STOPPED: "false"
      WATCHTOWER_MONITOR_ONLY: "false"
      WATCHTOWER_NOTIFICATION_TEMPLATE: '{{range .}}{{.Message}}{{println}}{{end}}'
      WATCHTOWER_NOTIFICATION_URL: ""
      WATCHTOWER_NOTIFICATIONS: shoutrrr
      WATCHTOWER_NOTIFICATIONS_LEVEL: info
      WATCHTOWER_SCHEDULE: 0 0 4 * * *
      WATCHTOWER_TIMEOUT: 10s
    hostname: ubuntu-Macmini7-1
    image: ghcr.io/containrrr/watchtower:latest
    networks:
      default: null
    restart: unless-stopped
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /media/ogidu/mediaserver/arrs
        target: /storage
        bind:
          create_host_path: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        bind:
          create_host_path: true
    env_file:
      - '.env'
networks:
  default:
    name: compose_default
